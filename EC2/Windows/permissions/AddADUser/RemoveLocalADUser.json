{
  "schemaVersion": "2.2",
  "description": "Remove AD user from local Administrators group and log them out.",
  "parameters": {
    "username": {
      "type": "String",
      "description": "Active Directory username (e.g., DOMAIN\\jdoe)"
    }
  },
  "mainSteps": [
    {
      "action": "aws:runPowerShellScript",
      "name": "removeADUser",
      "inputs": {
        "runCommand": [
          "$username = \"{{username}}\"",
          "Write-Output \"DEBUG: Username = $username\"",
          "if (-not $username) { Write-Error 'Username must be provided'; exit 1 }",
          "Try {",
          "  $groupMembers = Get-LocalGroupMember -Group 'Administrators' | ForEach-Object { $_.Name }",
          "  if ($groupMembers -contains $username) {",
          "    Remove-LocalGroupMember -Group 'Administrators' -Member $username",
          "    Write-Output \"User $username removed from Administrators group.\"",
          "  } else {",
          "    Write-Output \"User $username is not a member of Administrators group. Skipping removal.\"",
          "  }",
          "} Catch {",
          "  Write-Error $_.Exception.Message",
          "  exit 1",
          "}"
        ]
      }
    },
    {
      "action": "aws:runPowerShellScript",
      "name": "logOffUser",
      "inputs": {
        "runCommand": [
          "$username = \"{{username}}\"",
          "Write-Output \"DEBUG: Username for logoff = $username\"",
          "$quserOutput = quser 2>&1",
          "if ($quserOutput -is [string]) { $quserOutput = $quserOutput -split \"`n\" }",
          "$matchingSessions = @()",
          "foreach ($line in $quserOutput) {",
          "  if ($line -match \"(?i)^\\s*(.*?)\\s+(\\w+)\\s+(\\d+)\") {",
          "    $user = $matches[1].Trim()",
          "    $sessionId = $matches[3]",
          "    if ($user -ieq $username) {",
          "      $matchingSessions += $sessionId",
          "    }",
          "  }",
          "}",
          "if ($matchingSessions.Count -eq 0) {",
          "  Write-Output \"No active sessions found for user $username.\"",
          "} else {",
          "  foreach ($sessionId in $matchingSessions) {",
          "    logoff $sessionId /server:localhost",
          "    Write-Output \"Logged off session ID: $sessionId\"",
          "  }",
          "}"
        ]
      }
    }
  ]
}